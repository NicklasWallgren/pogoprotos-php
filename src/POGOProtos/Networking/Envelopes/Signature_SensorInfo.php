<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Networking/Envelopes/Signature.proto

namespace POGOProtos\Networking\Envelopes;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>POGOProtos.Networking.Envelopes.Signature.SensorInfo</code>
 */
class Signature_SensorInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * in ms since start
     * </pre>
     *
     * <code>uint64 timestamp_snapshot = 1;</code>
     */
    private $timestamp_snapshot = 0;
    /**
     * <code>double linear_acceleration_x = 3;</code>
     */
    private $linear_acceleration_x = 0.0;
    /**
     * <code>double linear_acceleration_y = 4;</code>
     */
    private $linear_acceleration_y = 0.0;
    /**
     * <code>double linear_acceleration_z = 5;</code>
     */
    private $linear_acceleration_z = 0.0;
    /**
     * <code>double magnetic_field_x = 6;</code>
     */
    private $magnetic_field_x = 0.0;
    /**
     * <code>double magnetic_field_y = 7;</code>
     */
    private $magnetic_field_y = 0.0;
    /**
     * <code>double magnetic_field_z = 8;</code>
     */
    private $magnetic_field_z = 0.0;
    /**
     * <code>int32 magnetic_field_accuracy = 9;</code>
     */
    private $magnetic_field_accuracy = 0;
    /**
     * <code>double attitude_pitch = 10;</code>
     */
    private $attitude_pitch = 0.0;
    /**
     * <code>double attitude_yaw = 11;</code>
     */
    private $attitude_yaw = 0.0;
    /**
     * <code>double attitude_roll = 12;</code>
     */
    private $attitude_roll = 0.0;
    /**
     * <code>double rotation_rate_x = 13;</code>
     */
    private $rotation_rate_x = 0.0;
    /**
     * <code>double rotation_rate_y = 14;</code>
     */
    private $rotation_rate_y = 0.0;
    /**
     * <code>double rotation_rate_z = 15;</code>
     */
    private $rotation_rate_z = 0.0;
    /**
     * <code>double gravity_x = 16;</code>
     */
    private $gravity_x = 0.0;
    /**
     * <code>double gravity_y = 17;</code>
     */
    private $gravity_y = 0.0;
    /**
     * <code>double gravity_z = 18;</code>
     */
    private $gravity_z = 0.0;
    /**
     * <code>int32 status = 19;</code>
     */
    private $status = 0;

    public function __construct() {
        \GPBMetadata\POGOProtos\Networking\Envelopes\Signature::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * in ms since start
     * </pre>
     *
     * <code>uint64 timestamp_snapshot = 1;</code>
     */
    public function getTimestampSnapshot()
    {
        return $this->timestamp_snapshot;
    }

    /**
     * <pre>
     * in ms since start
     * </pre>
     *
     * <code>uint64 timestamp_snapshot = 1;</code>
     */
    public function setTimestampSnapshot($var)
    {
        GPBUtil::checkUint64($var);
        $this->timestamp_snapshot = $var;
    }

    /**
     * <code>double linear_acceleration_x = 3;</code>
     */
    public function getLinearAccelerationX()
    {
        return $this->linear_acceleration_x;
    }

    /**
     * <code>double linear_acceleration_x = 3;</code>
     */
    public function setLinearAccelerationX($var)
    {
        GPBUtil::checkDouble($var);
        $this->linear_acceleration_x = $var;
    }

    /**
     * <code>double linear_acceleration_y = 4;</code>
     */
    public function getLinearAccelerationY()
    {
        return $this->linear_acceleration_y;
    }

    /**
     * <code>double linear_acceleration_y = 4;</code>
     */
    public function setLinearAccelerationY($var)
    {
        GPBUtil::checkDouble($var);
        $this->linear_acceleration_y = $var;
    }

    /**
     * <code>double linear_acceleration_z = 5;</code>
     */
    public function getLinearAccelerationZ()
    {
        return $this->linear_acceleration_z;
    }

    /**
     * <code>double linear_acceleration_z = 5;</code>
     */
    public function setLinearAccelerationZ($var)
    {
        GPBUtil::checkDouble($var);
        $this->linear_acceleration_z = $var;
    }

    /**
     * <code>double magnetic_field_x = 6;</code>
     */
    public function getMagneticFieldX()
    {
        return $this->magnetic_field_x;
    }

    /**
     * <code>double magnetic_field_x = 6;</code>
     */
    public function setMagneticFieldX($var)
    {
        GPBUtil::checkDouble($var);
        $this->magnetic_field_x = $var;
    }

    /**
     * <code>double magnetic_field_y = 7;</code>
     */
    public function getMagneticFieldY()
    {
        return $this->magnetic_field_y;
    }

    /**
     * <code>double magnetic_field_y = 7;</code>
     */
    public function setMagneticFieldY($var)
    {
        GPBUtil::checkDouble($var);
        $this->magnetic_field_y = $var;
    }

    /**
     * <code>double magnetic_field_z = 8;</code>
     */
    public function getMagneticFieldZ()
    {
        return $this->magnetic_field_z;
    }

    /**
     * <code>double magnetic_field_z = 8;</code>
     */
    public function setMagneticFieldZ($var)
    {
        GPBUtil::checkDouble($var);
        $this->magnetic_field_z = $var;
    }

    /**
     * <code>int32 magnetic_field_accuracy = 9;</code>
     */
    public function getMagneticFieldAccuracy()
    {
        return $this->magnetic_field_accuracy;
    }

    /**
     * <code>int32 magnetic_field_accuracy = 9;</code>
     */
    public function setMagneticFieldAccuracy($var)
    {
        GPBUtil::checkInt32($var);
        $this->magnetic_field_accuracy = $var;
    }

    /**
     * <code>double attitude_pitch = 10;</code>
     */
    public function getAttitudePitch()
    {
        return $this->attitude_pitch;
    }

    /**
     * <code>double attitude_pitch = 10;</code>
     */
    public function setAttitudePitch($var)
    {
        GPBUtil::checkDouble($var);
        $this->attitude_pitch = $var;
    }

    /**
     * <code>double attitude_yaw = 11;</code>
     */
    public function getAttitudeYaw()
    {
        return $this->attitude_yaw;
    }

    /**
     * <code>double attitude_yaw = 11;</code>
     */
    public function setAttitudeYaw($var)
    {
        GPBUtil::checkDouble($var);
        $this->attitude_yaw = $var;
    }

    /**
     * <code>double attitude_roll = 12;</code>
     */
    public function getAttitudeRoll()
    {
        return $this->attitude_roll;
    }

    /**
     * <code>double attitude_roll = 12;</code>
     */
    public function setAttitudeRoll($var)
    {
        GPBUtil::checkDouble($var);
        $this->attitude_roll = $var;
    }

    /**
     * <code>double rotation_rate_x = 13;</code>
     */
    public function getRotationRateX()
    {
        return $this->rotation_rate_x;
    }

    /**
     * <code>double rotation_rate_x = 13;</code>
     */
    public function setRotationRateX($var)
    {
        GPBUtil::checkDouble($var);
        $this->rotation_rate_x = $var;
    }

    /**
     * <code>double rotation_rate_y = 14;</code>
     */
    public function getRotationRateY()
    {
        return $this->rotation_rate_y;
    }

    /**
     * <code>double rotation_rate_y = 14;</code>
     */
    public function setRotationRateY($var)
    {
        GPBUtil::checkDouble($var);
        $this->rotation_rate_y = $var;
    }

    /**
     * <code>double rotation_rate_z = 15;</code>
     */
    public function getRotationRateZ()
    {
        return $this->rotation_rate_z;
    }

    /**
     * <code>double rotation_rate_z = 15;</code>
     */
    public function setRotationRateZ($var)
    {
        GPBUtil::checkDouble($var);
        $this->rotation_rate_z = $var;
    }

    /**
     * <code>double gravity_x = 16;</code>
     */
    public function getGravityX()
    {
        return $this->gravity_x;
    }

    /**
     * <code>double gravity_x = 16;</code>
     */
    public function setGravityX($var)
    {
        GPBUtil::checkDouble($var);
        $this->gravity_x = $var;
    }

    /**
     * <code>double gravity_y = 17;</code>
     */
    public function getGravityY()
    {
        return $this->gravity_y;
    }

    /**
     * <code>double gravity_y = 17;</code>
     */
    public function setGravityY($var)
    {
        GPBUtil::checkDouble($var);
        $this->gravity_y = $var;
    }

    /**
     * <code>double gravity_z = 18;</code>
     */
    public function getGravityZ()
    {
        return $this->gravity_z;
    }

    /**
     * <code>double gravity_z = 18;</code>
     */
    public function setGravityZ($var)
    {
        GPBUtil::checkDouble($var);
        $this->gravity_z = $var;
    }

    /**
     * <code>int32 status = 19;</code>
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * <code>int32 status = 19;</code>
     */
    public function setStatus($var)
    {
        GPBUtil::checkInt32($var);
        $this->status = $var;
    }

}

