<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Networking/Requests/Messages/StartGymBattleMessage.proto

namespace POGOProtos\Networking\Requests\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>POGOProtos.Networking.Requests.Messages.StartGymBattleMessage</code>
 */
class StartGymBattleMessage extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>string gym_id = 1;</code>
     */
    private $gym_id = '';
    /**
     * <code>repeated fixed64 attacking_pokemon_ids = 2;</code>
     */
    private $attacking_pokemon_ids;
    /**
     * <pre>
     * needs to be fixed64, tested by Grover
     * </pre>
     *
     * <code>fixed64 defending_pokemon_id = 3;</code>
     */
    private $defending_pokemon_id = 0;
    /**
     * <code>double player_latitude = 4;</code>
     */
    private $player_latitude = 0.0;
    /**
     * <code>double player_longitude = 5;</code>
     */
    private $player_longitude = 0.0;

    public function __construct() {
        \GPBMetadata\POGOProtos\Networking\Requests\Messages\StartGymBattleMessage::initOnce();
        parent::__construct();
    }

    /**
     * <code>string gym_id = 1;</code>
     */
    public function getGymId()
    {
        return $this->gym_id;
    }

    /**
     * <code>string gym_id = 1;</code>
     */
    public function setGymId($var)
    {
        GPBUtil::checkString($var, True);
        $this->gym_id = $var;
    }

    /**
     * <code>repeated fixed64 attacking_pokemon_ids = 2;</code>
     */
    public function getAttackingPokemonIds()
    {
        return $this->attacking_pokemon_ids;
    }

    /**
     * <code>repeated fixed64 attacking_pokemon_ids = 2;</code>
     */
    public function setAttackingPokemonIds(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::FIXED64);
        $this->attacking_pokemon_ids = $var;
    }

    /**
     * <pre>
     * needs to be fixed64, tested by Grover
     * </pre>
     *
     * <code>fixed64 defending_pokemon_id = 3;</code>
     */
    public function getDefendingPokemonId()
    {
        return $this->defending_pokemon_id;
    }

    /**
     * <pre>
     * needs to be fixed64, tested by Grover
     * </pre>
     *
     * <code>fixed64 defending_pokemon_id = 3;</code>
     */
    public function setDefendingPokemonId($var)
    {
        GPBUtil::checkUint64($var);
        $this->defending_pokemon_id = $var;
    }

    /**
     * <code>double player_latitude = 4;</code>
     */
    public function getPlayerLatitude()
    {
        return $this->player_latitude;
    }

    /**
     * <code>double player_latitude = 4;</code>
     */
    public function setPlayerLatitude($var)
    {
        GPBUtil::checkDouble($var);
        $this->player_latitude = $var;
    }

    /**
     * <code>double player_longitude = 5;</code>
     */
    public function getPlayerLongitude()
    {
        return $this->player_longitude;
    }

    /**
     * <code>double player_longitude = 5;</code>
     */
    public function setPlayerLongitude($var)
    {
        GPBUtil::checkDouble($var);
        $this->player_longitude = $var;
    }

}

