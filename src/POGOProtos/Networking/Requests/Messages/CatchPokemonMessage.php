<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Networking/Requests/Messages/CatchPokemonMessage.proto

namespace POGOProtos\Networking\Requests\Messages;

require_once('POGOProtos/Inventory/Item/ItemId.pb.php');
use Google\Protobuf\Internal\DescriptorPool;
use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

class CatchPokemonMessage extends \Google\Protobuf\Internal\Message
{
    private $encounter_id = 0;
    private $pokeball = 0;
    private $normalized_reticle_size = 0.0;
    private $spawn_point_id = '';
    private $hit_pokemon = false;
    private $spin_modifier = 0.0;
    private $normalized_hit_position = 0.0;

    public function getEncounterId()
    {
        return $this->encounter_id;
    }

    public function setEncounterId($var)
    {
        GPBUtil::checkUint64($var);
        $this->encounter_id = $var;
    }

    public function getPokeball()
    {
        return $this->pokeball;
    }

    public function setPokeball($var)
    {
        GPBUtil::checkEnum($var, \POGOProtos\Inventory\Item\ItemId::class);
        $this->pokeball = $var;
    }

    public function getNormalizedReticleSize()
    {
        return $this->normalized_reticle_size;
    }

    public function setNormalizedReticleSize($var)
    {
        GPBUtil::checkDouble($var);
        $this->normalized_reticle_size = $var;
    }

    public function getSpawnPointId()
    {
        return $this->spawn_point_id;
    }

    public function setSpawnPointId($var)
    {
        GPBUtil::checkString($var, True);
        $this->spawn_point_id = $var;
    }

    public function getHitPokemon()
    {
        return $this->hit_pokemon;
    }

    public function setHitPokemon($var)
    {
        GPBUtil::checkBool($var);
        $this->hit_pokemon = $var;
    }

    public function getSpinModifier()
    {
        return $this->spin_modifier;
    }

    public function setSpinModifier($var)
    {
        GPBUtil::checkDouble($var);
        $this->spin_modifier = $var;
    }

    public function getNormalizedHitPosition()
    {
        return $this->normalized_hit_position;
    }

    public function setNormalizedHitPosition($var)
    {
        GPBUtil::checkDouble($var);
        $this->normalized_hit_position = $var;
    }

}

$pool = DescriptorPool::getGeneratedPool();

$pool->internalAddGeneratedFile(hex2bin(
    "0a85030a41504f474f50726f746f732f4e6574776f726b696e672f526571" .
    "75657374732f4d657373616765732f4361746368506f6b656d6f6e4d6573" .
    "736167652e70726f746f1227504f474f50726f746f732e4e6574776f726b" .
    "696e672e52657175657374732e4d657373616765731a26504f474f50726f" .
    "746f732f496e76656e746f72792f4974656d2f4974656d49642e70726f74" .
    "6f22e6010a134361746368506f6b656d6f6e4d65737361676512140a0c65" .
    "6e636f756e7465725f696418012001280612330a08706f6b6562616c6c18" .
    "022001280e32212e504f474f50726f746f732e496e76656e746f72792e49" .
    "74656d2e4974656d4964121f0a176e6f726d616c697a65645f7265746963" .
    "6c655f73697a6518032001280112160a0e737061776e5f706f696e745f69" .
    "6418042001280912130a0b6869745f706f6b656d6f6e1805200128081215" .
    "0a0d7370696e5f6d6f646966696572180620012801121f0a176e6f726d61" .
    "6c697a65645f6869745f706f736974696f6e180720012801620670726f74" .
    "6f33"
));

