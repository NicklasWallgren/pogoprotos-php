<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Data/Capture/CaptureProbability.proto

namespace POGOProtos\Data\Capture;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>POGOProtos.Data.Capture.CaptureProbability</code>
 */
class CaptureProbability extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    private $pokeball_type;
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     */
    private $capture_probability;
    /**
     * <code>double reticle_difficulty_scale = 12;</code>
     */
    private $reticle_difficulty_scale = 0.0;

    public function __construct() {
        \GPBMetadata\POGOProtos\Data\Capture\CaptureProbability::initOnce();
        parent::__construct();
    }

    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    public function getPokeballType()
    {
        return $this->pokeball_type;
    }

    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     */
    public function setPokeballType(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, POGOProtos\Inventory\Item\ItemId::class);
        $this->pokeball_type = $var;
    }

    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     */
    public function getCaptureProbability()
    {
        return $this->capture_probability;
    }

    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     */
    public function setCaptureProbability(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::FLOAT);
        $this->capture_probability = $var;
    }

    /**
     * <code>double reticle_difficulty_scale = 12;</code>
     */
    public function getReticleDifficultyScale()
    {
        return $this->reticle_difficulty_scale;
    }

    /**
     * <code>double reticle_difficulty_scale = 12;</code>
     */
    public function setReticleDifficultyScale($var)
    {
        GPBUtil::checkDouble($var);
        $this->reticle_difficulty_scale = $var;
    }

}

