<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Data/PlayerBadge.proto

namespace POGOProtos\Data;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>POGOProtos.Data.PlayerBadge</code>
 */
class PlayerBadge extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>.POGOProtos.Enums.BadgeType badge_type = 1;</code>
     */
    private $badge_type = 0;
    /**
     * <code>int32 rank = 2;</code>
     */
    private $rank = 0;
    /**
     * <code>int32 start_value = 3;</code>
     */
    private $start_value = 0;
    /**
     * <code>int32 end_value = 4;</code>
     */
    private $end_value = 0;
    /**
     * <code>double current_value = 5;</code>
     */
    private $current_value = 0.0;

    public function __construct() {
        \GPBMetadata\POGOProtos\Data\PlayerBadge::initOnce();
        parent::__construct();
    }

    /**
     * <code>.POGOProtos.Enums.BadgeType badge_type = 1;</code>
     */
    public function getBadgeType()
    {
        return $this->badge_type;
    }

    /**
     * <code>.POGOProtos.Enums.BadgeType badge_type = 1;</code>
     */
    public function setBadgeType($var)
    {
        GPBUtil::checkEnum($var, \POGOProtos\Enums\BadgeType::class);
        $this->badge_type = $var;
    }

    /**
     * <code>int32 rank = 2;</code>
     */
    public function getRank()
    {
        return $this->rank;
    }

    /**
     * <code>int32 rank = 2;</code>
     */
    public function setRank($var)
    {
        GPBUtil::checkInt32($var);
        $this->rank = $var;
    }

    /**
     * <code>int32 start_value = 3;</code>
     */
    public function getStartValue()
    {
        return $this->start_value;
    }

    /**
     * <code>int32 start_value = 3;</code>
     */
    public function setStartValue($var)
    {
        GPBUtil::checkInt32($var);
        $this->start_value = $var;
    }

    /**
     * <code>int32 end_value = 4;</code>
     */
    public function getEndValue()
    {
        return $this->end_value;
    }

    /**
     * <code>int32 end_value = 4;</code>
     */
    public function setEndValue($var)
    {
        GPBUtil::checkInt32($var);
        $this->end_value = $var;
    }

    /**
     * <code>double current_value = 5;</code>
     */
    public function getCurrentValue()
    {
        return $this->current_value;
    }

    /**
     * <code>double current_value = 5;</code>
     */
    public function setCurrentValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->current_value = $var;
    }

}

