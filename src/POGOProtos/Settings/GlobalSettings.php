<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos/Settings/GlobalSettings.proto

namespace POGOProtos\Settings;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>POGOProtos.Settings.GlobalSettings</code>
 */
class GlobalSettings extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>.POGOProtos.Settings.FortSettings fort_settings = 2;</code>
     */
    private $fort_settings = null;
    /**
     * <code>.POGOProtos.Settings.MapSettings map_settings = 3;</code>
     */
    private $map_settings = null;
    /**
     * <code>.POGOProtos.Settings.LevelSettings level_settings = 4;</code>
     */
    private $level_settings = null;
    /**
     * <code>.POGOProtos.Settings.InventorySettings inventory_settings = 5;</code>
     */
    private $inventory_settings = null;
    /**
     * <code>string minimum_client_version = 6;</code>
     */
    private $minimum_client_version = '';
    /**
     * <code>.POGOProtos.Settings.GpsSettings gps_settings = 7;</code>
     */
    private $gps_settings = null;
    /**
     * <code>.POGOProtos.Settings.FestivalSettings festival_settings = 8;</code>
     */
    private $festival_settings = null;
    /**
     * <code>.POGOProtos.Settings.EventSettings event_settings = 9;</code>
     */
    private $event_settings = null;
    /**
     * <code>int32 max_pokemon_types = 10;</code>
     */
    private $max_pokemon_types = 0;
    /**
     * <code>.POGOProtos.Settings.SfidaSettings sfida_settings = 11;</code>
     */
    private $sfida_settings = null;

    public function __construct() {
        \GPBMetadata\POGOProtos\Settings\GlobalSettings::initOnce();
        parent::__construct();
    }

    /**
     * <code>.POGOProtos.Settings.FortSettings fort_settings = 2;</code>
     */
    public function getFortSettings()
    {
        return $this->fort_settings;
    }

    /**
     * <code>.POGOProtos.Settings.FortSettings fort_settings = 2;</code>
     */
    public function setFortSettings(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Settings\FortSettings::class);
        $this->fort_settings = $var;
    }

    /**
     * <code>.POGOProtos.Settings.MapSettings map_settings = 3;</code>
     */
    public function getMapSettings()
    {
        return $this->map_settings;
    }

    /**
     * <code>.POGOProtos.Settings.MapSettings map_settings = 3;</code>
     */
    public function setMapSettings(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Settings\MapSettings::class);
        $this->map_settings = $var;
    }

    /**
     * <code>.POGOProtos.Settings.LevelSettings level_settings = 4;</code>
     */
    public function getLevelSettings()
    {
        return $this->level_settings;
    }

    /**
     * <code>.POGOProtos.Settings.LevelSettings level_settings = 4;</code>
     */
    public function setLevelSettings(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Settings\LevelSettings::class);
        $this->level_settings = $var;
    }

    /**
     * <code>.POGOProtos.Settings.InventorySettings inventory_settings = 5;</code>
     */
    public function getInventorySettings()
    {
        return $this->inventory_settings;
    }

    /**
     * <code>.POGOProtos.Settings.InventorySettings inventory_settings = 5;</code>
     */
    public function setInventorySettings(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Settings\InventorySettings::class);
        $this->inventory_settings = $var;
    }

    /**
     * <code>string minimum_client_version = 6;</code>
     */
    public function getMinimumClientVersion()
    {
        return $this->minimum_client_version;
    }

    /**
     * <code>string minimum_client_version = 6;</code>
     */
    public function setMinimumClientVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->minimum_client_version = $var;
    }

    /**
     * <code>.POGOProtos.Settings.GpsSettings gps_settings = 7;</code>
     */
    public function getGpsSettings()
    {
        return $this->gps_settings;
    }

    /**
     * <code>.POGOProtos.Settings.GpsSettings gps_settings = 7;</code>
     */
    public function setGpsSettings(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Settings\GpsSettings::class);
        $this->gps_settings = $var;
    }

    /**
     * <code>.POGOProtos.Settings.FestivalSettings festival_settings = 8;</code>
     */
    public function getFestivalSettings()
    {
        return $this->festival_settings;
    }

    /**
     * <code>.POGOProtos.Settings.FestivalSettings festival_settings = 8;</code>
     */
    public function setFestivalSettings(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Settings\FestivalSettings::class);
        $this->festival_settings = $var;
    }

    /**
     * <code>.POGOProtos.Settings.EventSettings event_settings = 9;</code>
     */
    public function getEventSettings()
    {
        return $this->event_settings;
    }

    /**
     * <code>.POGOProtos.Settings.EventSettings event_settings = 9;</code>
     */
    public function setEventSettings(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Settings\EventSettings::class);
        $this->event_settings = $var;
    }

    /**
     * <code>int32 max_pokemon_types = 10;</code>
     */
    public function getMaxPokemonTypes()
    {
        return $this->max_pokemon_types;
    }

    /**
     * <code>int32 max_pokemon_types = 10;</code>
     */
    public function setMaxPokemonTypes($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_pokemon_types = $var;
    }

    /**
     * <code>.POGOProtos.Settings.SfidaSettings sfida_settings = 11;</code>
     */
    public function getSfidaSettings()
    {
        return $this->sfida_settings;
    }

    /**
     * <code>.POGOProtos.Settings.SfidaSettings sfida_settings = 11;</code>
     */
    public function setSfidaSettings(&$var)
    {
        GPBUtil::checkMessage($var, \POGOProtos\Settings\SfidaSettings::class);
        $this->sfida_settings = $var;
    }

}

